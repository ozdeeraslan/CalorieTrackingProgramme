// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YoungFit.DAL.Context;

#nullable disable

namespace YoungFit.DAL.Migrations
{
    [DbContext(typeof(UygulamaDbContext))]
    [Migration("20231207064816_Iki")]
    partial class Iki
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YoungFit.DAL.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Adminler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "hasansalgin@gmail.com",
                            Sifre = "admin123"
                        },
                        new
                        {
                            Id = 2,
                            Email = "ethem@gmail.com",
                            Sifre = "bey110323."
                        },
                        new
                        {
                            Id = 3,
                            Email = "ozdenur@gmail.com",
                            Sifre = "admin1234"
                        });
                });

            modelBuilder.Entity("YoungFit.DAL.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("YoungFit.DAL.Entities.KullaniciYemek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("OgunZamanı")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToplamKalori")
                        .HasColumnType("int");

                    b.Property<string>("YemekAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YemekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("YemekId");

                    b.ToTable("KullaniciYemekler");
                });

            modelBuilder.Entity("YoungFit.DAL.Entities.Yemek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Kalori")
                        .HasColumnType("int");

                    b.Property<string>("OlcuBirimi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<byte[]>("Resim")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ToplamKalori")
                        .HasColumnType("int");

                    b.Property<string>("YemekAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YemekZamani")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("Yemekler");
                });

            modelBuilder.Entity("YoungFit.DAL.Entities.KullaniciYemek", b =>
                {
                    b.HasOne("YoungFit.DAL.Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciYemekler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YoungFit.DAL.Entities.Yemek", "Yemek")
                        .WithMany("KullaniciYemekler")
                        .HasForeignKey("YemekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Yemek");
                });

            modelBuilder.Entity("YoungFit.DAL.Entities.Kullanici", b =>
                {
                    b.Navigation("KullaniciYemekler");
                });

            modelBuilder.Entity("YoungFit.DAL.Entities.Yemek", b =>
                {
                    b.Navigation("KullaniciYemekler");
                });
#pragma warning restore 612, 618
        }
    }
}
